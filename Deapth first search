#include <stdio.h>
#include <stdlib.h>
#define MAX_VERTICES 100
{
int vertex;
struct node* next;
};
struct graph
{
int num_vertices;
struct node* adj_list[MAX_VERTICES];
int visited[MAX_VERTICES];
};
struct node* create_node(int v) 
{
struct node* new_node = (struct node*)malloc(sizeof(struct node));
new_node->vertex = v;
new_node->next = NULL;
return new_node;
}
void add_edge(struct graph* g, int src, int dest) 
{
struct node* new_node = create_node(dest);
new_node->next = g->adj_list[src];
g->adj_list[src] = new_node;
}
void init_graph(struct graph* g, int n) 
{
g->num_vertices = n;
for (int i = 0; i < n; i++) 
{
g->adj_list[i] = NULL;
g->visited[i] = 0;
}
}
void dfs(struct graph* g, int v) 
{
g->visited[v] = 1;
printf("%d ", v);
struct node* temp = g->adj_list[v];
while (temp != NULL) 
{
int adj_vertex = temp->vertex;
if (g->visited[adj_vertex] == 0) 
{
dfs(g, adj_vertex);
}
temp = temp->next;
}
}
int main()
{
struct graph g;
int n, e, src, dest;
printf("Enter the number of vertices in the graph: ");
scanf("%d", &n);
init_graph(&g, n);
printf("Enter the number of edges in the graph: ");
scanf("%d", &e);
for (int i = 0; i < e; i++) 
{
printf("Enter edge %d (source destination): ", i + 1);
scanf("%d %d", &src, &dest);
add_edge(&g, src, dest);
add_edge(&g, dest, src);
}
printf("Enter the starting vertex: ");
scanf("%d", &src);
printf("DFS traversal starting from vertex %d: ", src);
dfs(&g, src);
return 0;
}
